name: "Coverage"

on:
  push:
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [master, devel]

jobs:

  build:
    name: ${{matrix.config.name}}
    runs-on: ${{matrix.config.os}}
    strategy:
        fail-fast: false
        matrix:
            config:
                - {
                    name: "Ubuntu_Focal_GCC",
                    os: ubuntu-20.04,
                    build_type: "Debug",
                    cc: "gcc",
                    cxx: "g++"
                  }

    steps:
    # checkout repo at $GITHUB_WORKSPACE
    - name: Checkout Repository
      uses: actions/checkout@v2
      with:
        # We must fetch at least the immediate parents so that if this is
        # a pull request then we can checkout the head.
        fetch-depth: 2

    - name: Install Dependencies
      run: sudo apt-get install -y libocct-* occt-misc doxygen graphviz libtbb-dev libxi-dev libpolyclipping-dev lcov

    # If this run was triggered by a pull request event, then checkout
    # the head of the pull request instead of the merge commit.
    - run: git checkout HEAD^2
      if: ${{github.event_name == 'pull_request'}}

    - name: Configure
      run: |
          cmake \
            -S . \
            -B build \
            -DCMAKE_BUILD_TYPE=${{matrix.config.build_type}} \
            -DBUILD_TESTING=ON \
            -DCODE_COVERAGE=ON

    - name: Build
      run: |
        cmake \
          --build build \
          --parallel $(nproc) \
          --config ${{matrix.config.build_type}}

    # run unit test
    - name: Test
      working-directory: ${{github.workspace}}/build
      run: |
        pwd
        ctest \
          --build-config ${{matrix.config.build_type}} \
          --parallel $(nproc) \
          --output-on-failure

    # generate coverage report
    # remove system libraries, downloaded dependencies, and unit tests
    - name: Generate Coverage Report
      working-directory: ${{github.workspace}}/build
      run: |
        pwd
        lcov --capture --directory . --output-file coverage.info
        lcov --remove coverage.info --output-file coverage.info '/usr/*' '*/_deps/*' '*/tests/*'
        lcov --list coverage.info

    # upload coverage report to codecov
    - name: Upload Coverage Report
      uses: codecov/codecov-action@v1
      with:
        file: ${{github.workspace}}/coverage.info
        verbose: true

