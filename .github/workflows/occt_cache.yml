# This workflow maintains the vcpkg cache of opencascade binaries (& dependencies)

name: "Cache OCCT build (Windows)"

on:
  schedule:
    - cron: '0 0 * * *'

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build & Cache OCCT
    runs-on: windows-latest
    steps:
      # parse baseline.json to find the version and portversion
      - name: Fetch OCCT Version
        id: occt_version
        run: |
          VCPKG_OCCT_METADATA=$VCPKG_INSTALLATION_ROOT/versions/baseline.json
          OCCT_VERSION=$(jq -r '.default["opencascade"]["baseline"]' $VCPKG_OCCT_METADATA)
          OCCT_PORT_VERSION=$(jq -r '.default["opencascade"]["port-version"]' $VCPKG_OCCT_METADATA)
          OCCT_NAME_VERSION=occt-${OCCT_VERSION}_${OCCT_PORT_VERSION}
          echo "::set-output name=occt_version_revision::$OCCT_NAME_VERSION"
          echo "OCCT VERSION: ${OCCT_NAME_VERSION}"

      - name: Restore OCCT cached build
        id: cache
        uses: actions/cache@v2
        with:
          path: ~\AppData\Local\vcpkg\archives\
          key: ${{steps.occt_version.outputs.occt_version_revision}}

      - name: Build/Install OCCT
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          vcpkg install opencascade[tbb]
        env:
          # force vcpkg to build x64
          VCPKG_DEFAULT_TRIPLET: x64-windows

