# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
name: "Build/Test"

on:
  push:
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [master]

defaults:
  run:
    shell: bash

jobs:

  build:
    name: ${{matrix.config.name}}
    runs-on: ${{matrix.config.os}}
    strategy:
        fail-fast: false
        matrix:
            config:
                - {
                    name: "Ubuntu_Focal_GCC",
                    os: ubuntu-20.04,
                    build_type: "Release",
                    cc: "gcc",
                    cxx: "g++",
                    generator: "Ninja"
                  }
                - {
                    name: "Ubuntu_Focal_Clang",
                    os: ubuntu-20.04,
                    build_type: "Release",
                    cc: "clang",
                    cxx: "clang++",
                    generator: "Ninja"
                  }
                - {
                    name: "MacOS_Clang",
                    os: macos-latest,
                    build_type: "Release",
                    cc: "clang",
                    cxx: "clang++",
                    generator: "Ninja"
                  }
#                - {
#                    name: "Win10",
#                    os: windows-latest,
#                    build_type: "Release",
#                    generator: "Visual Studio 16 2019"
#                  }

    steps:
    # checkout repo at $GITHUB_WORKSPACE
    - name: Checkout Repository
      uses: actions/checkout@v2
      with:
        # We must fetch at least the immediate parents so that if this is
        # a pull request then we can checkout the head.
        fetch-depth: 2

    - name: Install Dependencies (Linux)
      if: ${{matrix.config.os == 'ubuntu-20.04'}}
      run: >-
        sudo apt-get update &&
        sudo apt-get install -y
        ninja-build
        libocct-*
        occt-misc
        doxygen
        graphviz
        libtbb-dev
        libxi-dev

    - name: Install Dependencies (Mac OS)
      if: ${{matrix.config.os == 'macos-latest'}}
      run: |
        brew install opencascade ninja

    - name: Restore vcpkg cache (Windows)
      if: ${{matrix.config.os == 'windows-latest'}}
      uses: actions/cache@v2
      with:
        path: ~\AppData\Local\vcpkg\archives\
        key: occt-7.5.0_1
        restore-keys: occt-

    - name: Install Dependencies (Windows)
      if: ${{matrix.config.os == 'windows-latest'}}
      run: |
        vcpkg install opencascade[tbb]
        vcpkg integrate install
        echo "CMAKE_TOOLCHAIN_FILE=${VCPKG_INSTALLATION_ROOT}/scripts/buildsystems/vcpkg.cmake" >> $GITHUB_ENV
      env:
        VCPKG_DEFAULT_TRIPLET: x64-windows # force vcpkg to build x64

    # If this run was triggered by a pull request event, then checkout
    # the head of the pull request instead of the merge commit.
    - run: git checkout HEAD^2
      if: ${{github.event_name == 'pull_request'}}

    - name: Configure
      run: >-
        cmake
        -S .
        -B build
        -G "${{matrix.config.generator}}"
        -DCMAKE_BUILD_TYPE=${{matrix.config.build_type}}
        -DBUILD_TESTING=ON
        -DCMAKE_TOOLCHAIN_FILE=$CMAKE_TOOLCHAIN_FILE

    - name: Build
      run: >-
        cmake
        --build ./build
        --parallel 2
        --config ${{matrix.config.build_type}}


    - name: Test
      working-directory: ${{github.workspace}}/build
      run: >-
        ctest
        --build-config ${{matrix.config.build_type}}
        --extra-verbose
        --parallel 2
        --output-on-failure
